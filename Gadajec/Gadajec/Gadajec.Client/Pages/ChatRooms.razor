@page "/rooms"


<PageTitle>Pokoje Gadajca</PageTitle>

<HeadContent>
    <meta name="description" content="This is test from posts" />
</HeadContent>

@inject IApiBroker apiBroker;
@using Gadajec.Client.Brokers.API
@using Gadajec.Client.Shared.Templates
@using Gadajec.Shared.Rooms.Queries

 <div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
      <div class="container-fluid">
        <div class="row mb-2">
          <div class="col-sm-6">
        <h1>Pokoje</h1>
    </div>
          <div class="col-sm-6">
            <ol class="breadcrumb float-sm-right">
              <li class="breadcrumb-item"><a href="#">Gadajec</a></li>
              <li class="breadcrumb-item active">Pokoje</li>
            </ol>
          </div>
        </div>
      </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">

      <!-- Default box -->
      <div class="card">
        <div class="card-header">
          <h3 class="card-title">Pokoje</h3>

          <div class="card-tools">
            <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
              <i class="fas fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
              <i class="fas fa-times"></i>
            </button>
          </div>
        </div>
        <div class="card-body p-0">
          <table class="table table-striped projects">
              <thead>
                  <tr>
                      <th style="width: 1%">
                          #
                      </th>
                      <th style="width: 20%">
                          Nazwa pokoju
                      </th>
                      <th style="width: 9%" class="text-center">
                          Status
                      </th>
                      <th style="width: 50%">
                          Użytkownicy
                      </th>
                      <th style="width: 20%">
                      </th>
                  </tr>
              </thead>
              <tbody>
                        <Virtualize ItemsProvider="LoadRooms" Context="item">
                            <tr>
                                <td>
                                    #
                                </td>
                                <td>
                                    <a>
                                        @item.Name
                                    </a>
                                    <br />
                                    <small>
                                        Created @item.CreatedAt.Value.ToShortDateString()
                                    </small>
                                </td>
                                <td class="project-state">
                                    <span class="badge badge-@SetStatusBadge(item.Status)">
                                        @SetStatusValue(item.Status)
                                    </span>
                                </td>
                                <td class="project-actions text-right">
                                    <a class="btn btn-primary btn-sm" href="/rooms/@item.Id">
                                        <i class="fas fa-folder">
                                        </i>
                                        View
                                    </a>
                                    <a class="btn btn-info btn-sm" href="#">
                                        <i class="fas fa-pencil-alt">
                                        </i>
                                        Edit
                                    </a>
                                    <a class="btn btn-danger btn-sm" href="#">
                                        <i class="fas fa-trash">
                                        </i>
                                        Delete
                                    </a>
                                </td>
                            </tr>
                    </Virtualize>
              </tbody>
          </table>
        </div>
        <!-- /.card-body -->
      </div>
      <!-- /.card -->

    </section>
    <!-- /.content -->
  </div>
  <!-- /.content-wrapper -->

@code {

    protected async ValueTask<ItemsProviderResult<RoomForListVm>> LoadRooms(ItemsProviderRequest request)
    {
        var pageSize = request.Count;
        var index = request.StartIndex;
        var items = await apiBroker.GetAllRoomsAsync();
        return new ItemsProviderResult<RoomForListVm>(items.Skip(index).Take(pageSize), items.Count());
    }

    private string SetStatusValue(int statusId)
    {
        string result;
        switch (statusId)
        {
            case 1:
                result = "Online";
                break;
            case 2:
                result = "Deleted";
                break;
            default:
                result = "Offline";
                break;
        }
        return result;
    }
     private string SetStatusBadge(int statusId)
    {
        string result;
        switch (statusId)
        {
            case 1:
                result = "success";
                break;
            case 2:
                result = "warning";
                break;
            default:
                result = "secondary";
                break;
        }
        return result;
    }
}
