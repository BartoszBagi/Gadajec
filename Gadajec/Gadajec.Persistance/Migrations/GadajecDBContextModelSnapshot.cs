// <auto-generated />
using System;
using Gadajec.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gadajec.Persistance.Migrations
{
    [DbContext(typeof(GadajecDBContext))]
    partial class GadajecDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Gadajec")
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Gadajec.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rooms", "Gadajec");

                    b.HasData(
                        new
                        {
                            ID = new Guid("1ec00894-b394-4059-84bf-01d6b11b67a0"),
                            CreatedBy = "Admin",
                            Name = "C# - devs"
                        },
                        new
                        {
                            ID = new Guid("420cc0c3-53f7-4cba-8e55-0350c6d1f159"),
                            CreatedBy = "Admin",
                            Name = "SQL - devs"
                        });
                });

            modelBuilder.Entity("Gadajec.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Users", "Gadajec");

                    b.HasData(
                        new
                        {
                            Id = new Guid("86791339-8587-4014-9d28-601a69dc9fd0"),
                            ContactId = 0,
                            CreatedAt = new DateTime(2022, 8, 11, 19, 25, 31, 423, DateTimeKind.Local).AddTicks(559),
                            Email = "Bartosz@mail.com.pl",
                            FirstName = "Bartosz",
                            LastName = "Bagiński",
                            Password = "SGFzbG8="
                        });
                });

            modelBuilder.Entity("RoomUser", b =>
                {
                    b.Property<Guid>("RoomsID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoomsID", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoomUser", "Gadajec");
                });

            modelBuilder.Entity("RoomUser", b =>
                {
                    b.HasOne("Gadajec.Domain.Entities.Room", null)
                        .WithMany()
                        .HasForeignKey("RoomsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gadajec.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
